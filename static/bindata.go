// Code generated by go-bindata.
// sources:
// ../config/README.md
// ../config/cli/anon-metric-node-client.json
// ../config/cli/anon-metric-node-server.json
// ../config/cli/fleet-eth.prod.json
// ../config/cli/fleet-eth.staging.json
// ../config/cli/fleet-eth.test.json
// ../config/cli/fleet-plq.prod.json
// ../config/cli/fleet-wakuv2.prod.json
// ../config/cli/fleet-wakuv2.test.json
// ../config/cli/les-enabled.json
// ../config/cli/mailserver-enabled.json
// ../config/status-chain-genesis.json
// keys/bootnode.key
// keys/firebaseauthkey
// keys/test-account1-status-chain.pk
// keys/test-account1.pk
// keys/test-account2-status-chain.pk
// keys/test-account2.pk
// keys/test-account3-before-eip55.pk
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ConfigReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x51\x6f\xdb\x38\x12\x7e\x0f\xe0\xff\x30\x50\x1f\xae\x01\x52\xc9\x8d\xe3\xb6\xab\x97\x6b\x9a\xa4\xbb\xb9\x6b\xd3\xc0\xf1\x5e\x1f\x8a\xc0\xa2\xc5\x91\xcc\x0d\xc5\xd1\x92\x94\x5d\xef\xa1\xff\xfd\x30\x94\x2c\xdb\xb1\xb7\xc0\x21\x40\x6c\x93\xc3\x99\x6f\xe6\xfb\x38\xc3\x17\x70\x6b\xbc\x25\xd9\xe4\x5e\x91\x19\x9c\x0c\x4e\xa6\x0b\xe5\x40\x52\xde\x54\x68\x3c\x48\x74\xb9\x55\x73\x74\xe0\x17\x08\x62\x29\x94\x16\x73\x8d\x40\x35\xdb\x3b\x50\x26\x6c\xfc\xeb\xe1\xcb\x1d\xe4\x64\x0a\x55\x42\x41\x16\x32\xe7\x85\x6f\xdc\xab\x92\xb2\xb8\x75\x8a\xe0\xbc\x6d\x72\xdf\x58\x04\x2a\x0e\x0e\x71\x4c\x2c\x94\x41\xb9\x71\xf9\x2d\xab\x85\x15\x95\x4b\x5a\x8b\xb8\xa4\xec\xf1\x65\xf2\x7c\xed\x14\x0a\xa5\xf1\x0c\x56\x0b\x95\x2f\x40\x68\x47\xec\xd1\x0b\x65\xd8\xa1\x17\x4a\xa3\x84\x9c\x2a\x4e\xc6\x01\x19\xa8\x50\x18\x65\x4a\xc6\x80\x22\x5f\x74\x89\xc4\xc0\x08\xb3\x3b\x92\x78\x15\x5c\x67\x1d\xdc\x0e\x55\x9b\x7e\x89\x06\xad\xd0\x1d\xe6\xc6\x0a\x3e\x0a\x4f\xb8\x76\x20\x7c\xb0\x98\xcd\x2c\x91\x9f\xcd\xf6\x52\x64\x84\xa1\x0a\xb7\xed\x62\x5b\xd3\xae\x80\x54\x80\x30\xeb\xbe\x9e\xc2\x22\x78\x22\x58\x8a\xb2\x41\x28\x10\x35\x14\x16\x79\x0d\xbe\x51\x8d\x06\x84\x01\xe5\x5c\x83\x8f\x2f\x17\xde\xd7\x2e\x4d\x92\x52\xf9\x45\x33\x8f\x73\xaa\x92\xae\xea\xaa\xff\x56\x52\x12\xac\x5d\x62\x70\x75\x1a\x40\xdc\x7c\x17\x55\xad\xb1\x67\x4b\x69\x74\x90\x0b\x03\x73\x84\xa5\xc2\xd5\x2e\x03\xad\x4d\x92\x6b\xc5\xb5\xdf\xfe\x3a\x85\x82\xb4\x44\x1b\x1c\xbe\x80\xdb\xaa\x26\xeb\x85\xf1\xf0\x80\x41\x47\x6e\xc3\xf9\x33\x8a\x1d\x32\x7f\x3e\x84\xf0\x04\x0e\x97\xa1\x9e\xae\x3b\xd5\xb2\x50\x91\xf3\xa0\x7a\x97\xc4\xd5\xe7\xb2\x68\xe5\xf8\xe4\x1c\x35\xad\xda\xc0\x2f\xf6\x18\xdb\xc4\x64\x06\x8e\x48\xac\xa3\x2b\x9c\xbc\x34\x80\x5d\x19\xa8\x78\x1e\xd0\xa1\xf7\xca\x94\x0e\x56\xd4\x68\x46\x9a\xeb\x46\x62\x3a\x38\xc9\xb2\xec\x0f\xc7\x97\xe4\xbf\x83\x13\x00\x80\xe8\x0e\xfd\x8a\xec\xd3\xed\x75\x94\xc2\xeb\xb3\x6e\xf1\x5a\x78\x71\xad\x6c\x94\x42\x94\xf8\xaa\xde\x32\xf1\x4a\x0a\x2f\xa2\x8d\x19\x03\xff\x37\xae\xd9\xec\xf5\xf9\xe8\xcf\x15\x3e\xfb\xdf\x1b\x4e\xd0\x48\xfc\x6b\x49\x8d\x8b\x52\x28\x84\x76\xb8\x75\x71\xad\x5c\x4e\x4b\xb4\xeb\xe7\x5b\x9f\xb8\x56\xe6\x52\xca\x80\x63\x18\x87\xbf\x74\x34\x1c\x0d\x77\x1d\x97\x6c\x65\xa7\x54\xab\x9c\x9d\x7f\x8b\x56\x0b\xe5\x6a\xb4\x95\x50\x3a\x7a\x1c\x9c\xfc\x08\x39\x77\xca\x5d\x53\xf3\x0f\x09\x2b\xae\x90\x27\x40\x13\xda\x40\xa8\xef\xe4\xfe\x0a\xb8\x78\x9d\x89\x41\x94\xc7\xaa\xf5\xdb\x74\x7a\x7f\x13\x8e\xc9\x28\x05\x6f\x9b\x1e\x2d\xef\xfc\x46\xce\xef\x60\x8d\x76\xf7\xee\xc9\xf2\xde\xbb\xf1\xc5\x78\xb3\x7c\x79\x7f\xfb\x99\x64\xa3\x91\x81\x47\xe8\x17\x67\x06\xfd\xd9\x0a\xe7\xa3\x33\x21\x2b\x65\xa2\x3d\xf4\x06\xc8\x4a\xb4\x0c\x5c\xc8\x3f\x1a\xe7\x41\x53\x59\x72\x1b\xe8\xc9\xfe\x39\xf6\x4f\x54\x7e\x54\x1a\x03\xa9\x4b\x61\x13\x4d\xe5\x96\xd8\x58\x53\xd9\xe3\xfd\x44\xe5\x27\x5c\xa2\x66\xd3\xdb\xbb\x8f\x5f\x76\x37\x3e\x8b\xef\x0f\xea\x2f\xf6\x72\x3e\x1c\xee\xaf\x7f\x10\xf9\x53\x53\x73\x32\xe3\x9d\x8d\x2b\xaa\x6a\x8b\xce\x4d\xc8\xf3\xad\xe9\xca\xb6\x4d\xed\x3f\x42\x2b\x09\xd9\x26\x66\xb6\x4d\x47\x58\x4c\x21\xbb\x99\x4c\xbe\x4c\xb2\x33\xc8\xbe\x5e\x4e\xee\xf8\x93\x11\xf1\xe7\xf5\xcd\x87\xdf\x7f\xe5\x2f\xd3\xc9\xe5\xd5\x4d\xb6\xb9\x4d\x5f\xc5\x53\xb3\xe9\x7f\x5b\xda\x5b\xd2\xd7\xd4\x58\x30\x24\x43\x2f\xb2\xa8\xc5\x1a\xd8\xfc\x65\x45\x52\x15\x0a\x25\x7c\x6d\xc5\x73\x0a\xb5\x25\x4f\x39\x69\xa8\xd0\x39\x51\x62\x5b\x5c\xad\x7b\xf1\x74\x57\x0a\xfc\x42\xb9\x63\xd5\xde\xc2\x88\x52\xe8\x16\xc3\xc6\x51\xf9\xec\xec\x7c\x16\x4a\x3f\xa0\x5d\xa2\x3d\x62\xf2\xf3\x8b\x99\xac\xc4\x53\x13\xed\xda\x6f\x9d\xdd\x0b\xe7\x56\x64\x39\x6e\xd4\x9d\xa2\xa2\xd0\xca\xe0\x2b\x65\xe6\xf4\xfd\x6f\x8e\x71\xc0\x09\x7a\x34\xdc\x77\xa2\x14\x46\xc3\xd6\xec\xc7\x96\xc0\x30\x75\x0e\x03\x65\xdc\x2c\x1b\x87\x32\x0c\x53\xb7\xae\x2a\xf4\x56\xe5\x80\x26\xb7\xeb\x30\x29\xb8\x6f\x2d\x94\xf3\x64\xd7\x60\xf1\xcf\x06\x9d\x77\xf1\x81\xbf\x3d\x04\x59\x3f\xcb\x4c\x53\xcd\xd1\xb2\x0b\x29\xd6\x2e\xc4\x68\xe7\xa7\x27\x78\x42\xac\x7b\xe2\x42\xb3\xfc\xb0\xe6\x83\xa2\xd1\x1e\x94\x87\x95\xd2\x9a\xa1\x41\xa6\x59\x72\x72\x9e\x01\x56\x73\x94\x12\x25\x70\x1d\xe7\xc2\x61\x0c\x53\x0a\x36\x35\x39\x5f\x5a\xe4\x67\x82\xf3\x28\x64\x50\x13\xdf\x31\x8e\x34\x38\x11\x52\x06\x0d\xf0\xaf\x20\xaf\xb6\x53\xa7\x1c\xf5\x40\x14\xd7\x9d\xf3\x43\x61\x44\xf7\xbf\xfe\x9f\x6a\xf9\x7d\x72\xcb\x5c\x6e\xe0\xa5\x49\xd2\x38\xb4\x69\xdd\x95\xff\xfd\x82\x9c\x4f\xb9\xa5\xfd\xb3\x9b\xcb\xd1\xe6\xf0\x8f\x03\x0a\x07\x27\xb3\xd9\xdd\x97\xe9\x4d\x3a\x9b\x85\xf1\xb5\xa9\xd5\xc6\x59\xcb\xe3\x7c\x0d\x0f\x41\x39\x70\x59\xd7\x20\x8c\x84\x6f\x9c\x30\x77\x5a\x17\xa8\x72\xdb\x81\x5e\x68\x44\xef\xe2\x56\x69\xb1\xaa\x92\x53\x96\x43\x76\x4c\x79\x59\x3f\x08\xaf\x74\xc3\xcd\x7c\x6f\x16\x2a\xb7\x99\xbd\x95\x30\xe1\x22\xae\x16\xc2\x43\x8d\x68\x5d\xc0\x30\x27\xf2\xce\x5b\x51\x87\x8b\xed\x5a\x12\x76\xde\x6e\x81\x37\x61\xf2\xf0\x5a\x30\x98\x7b\xf6\x80\x86\x75\xe0\xbc\xb0\x41\x72\xfb\x44\x45\x7b\x38\xb6\x84\x1c\x27\x23\xfa\xc8\xa9\x76\x1d\x3c\xae\x2d\xc9\xbe\x5d\x7e\x20\xf2\x3c\x23\xc3\x60\xea\x99\x46\xc6\x99\x26\xc9\xe8\x62\x8c\xd6\xb7\xff\xdf\x9f\x8f\xe2\x8b\x71\xfc\xe6\x6d\xfc\xee\x97\x74\x34\xbc\x18\x5e\x74\x6c\x3d\x6e\x7c\x4d\x2d\x63\x92\xdb\x7b\x71\xdc\xe9\xee\xf8\x7d\xff\xcb\xbb\xf8\xed\x9b\x78\x7c\x11\x8f\xce\xd3\xd1\x70\x7c\xe8\x94\xe9\x54\xf9\xdf\x43\xdc\x9d\xe7\xef\x5f\x9f\xc7\xa3\x8b\x78\xfc\x26\x7e\xfb\x2e\x4c\xe1\xf1\xc6\x1b\x7f\xec\x88\x29\xeb\xd3\xce\x60\x81\xba\x0e\x8f\x98\xa3\x84\x14\xca\xc8\x96\xc9\xf0\x6a\x5a\x87\x27\x52\x45\x16\x77\x5e\x32\x9e\x60\x21\x96\xdc\x67\x85\x81\x6c\x07\x70\x06\xfc\x46\x3f\x2c\x4b\xd6\x3f\xa4\x2d\x42\x98\x93\x2e\x1c\x12\x5a\xaf\x41\x84\x3b\xde\x8a\x87\x4c\x2b\x80\x78\x70\xf2\xbf\x00\x00\x00\xff\xff\xa3\x6b\xb3\x8c\x42\x0c\x00\x00")

func ConfigReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_ConfigReadmeMd,
		"../config/README.md",
	)
}

func ConfigReadmeMd() (*asset, error) {
	bytes, err := ConfigReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/README.md", size: 3138, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliAnonMetricNodeClientJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xcb\x6e\xdb\x30\x10\xbc\x07\xc8\x3f\x08\x3c\x3b\x89\xf8\x14\xe9\x5b\x12\xa7\x4d\x50\x3b\x30\xe2\x14\x3d\x14\x3d\xac\xc4\x95\x2c\x58\x16\x05\x89\xb2\xd3\x14\xf9\xf7\x82\xf2\xb3\x0f\xf0\x36\x3b\x9c\x59\xcc\xec\xaf\xcb\x8b\x28\x22\xcf\xe8\xb7\xae\x5d\x3d\x4d\xc8\x38\xa2\xa3\x01\x9a\x80\x87\x49\xd9\x92\x71\x44\x6e\xfc\xba\xb9\xe9\x3c\xf8\xbe\xbb\x2a\xdc\x95\x05\x0f\x64\x47\x7a\x76\x16\xbf\xe0\xcf\x40\x8a\x79\x4a\x19\xd7\x19\x8f\xad\x34\x4c\x22\x07\x9a\xa4\x22\xa3\x42\x09\xc8\x94\x56\x29\xb7\x60\xb4\x64\x49\x1e\xd3\x54\x67\x0a\xe2\x84\xd3\x4c\x48\x9a\x51\x43\x2d\x8f\xf7\x8a\x2f\x58\x5b\x7c\xdf\xb8\xbe\x23\xe3\xc8\xb7\x3d\x1e\x8c\x26\x65\x97\xb9\x0d\xb6\xc1\x2c\x87\xaa\xdb\x0f\xa6\x65\xe7\xb1\xbe\xb5\x76\xd8\x34\xbe\x1e\xde\x98\xc7\x3c\xe6\x47\xc5\x22\x70\xda\x57\xd7\x94\x59\x50\xfd\x4e\xb6\xcb\xb2\x6b\xb0\x5d\x43\x59\x91\x1f\xa3\xcb\x8b\x81\xf7\xf8\xfa\x3a\x7f\xa8\x21\xad\xd0\xfe\x61\x1d\xf0\x47\xd7\xf9\xa0\x4f\x59\x32\x38\x50\x72\x9a\xcd\x5d\x1b\x66\x5a\x0a\xb9\x03\x6f\xe7\x4f\x33\x67\xfb\x0a\x83\x19\x41\xbf\x1c\xd5\xe8\x47\x5b\x4c\xf9\x08\xec\xba\xac\x47\xd0\x34\x6b\xf4\x6d\xd8\xe6\x60\xfe\x0d\x56\xfd\xbd\xab\xf3\xb2\x20\xe3\x68\xe8\x24\x8a\xc8\x7f\xb6\x39\xa2\x33\x28\xab\x05\xb6\x1b\x6c\xff\x1a\x9f\xf7\xb6\x81\xf6\xac\x3b\x7b\xb3\x85\x55\x4f\x0e\xc4\x93\xc2\x1c\xba\x6e\xeb\xda\x60\x44\xf6\x35\xbb\x3c\xaf\xca\x1a\xaf\xca\x3a\x75\x6f\x24\xfc\xf8\x38\xac\x3a\x75\xc5\xa7\xb2\xc2\xa3\x41\xe5\x8a\xd3\x71\x5c\x57\xae\xd8\x67\x33\x75\xc5\x14\x37\x58\x05\xe2\xe4\xe1\xee\xeb\xe7\x13\x3e\x83\xb7\x45\xf9\x1e\x24\x58\x1c\x9f\xa3\x77\x90\xad\xfa\x26\xe4\x26\x8f\xf0\xbd\x5b\x37\x2d\x76\xdd\x8b\xf3\xe0\xcf\xd3\x18\x08\x8b\xe5\x12\xdf\xfc\x3f\xd1\xdd\xd6\xae\x9e\xed\x32\x5e\x60\x6d\x87\xc3\x26\xb1\xa0\x46\x2a\x91\x18\xc9\x53\x8e\x2a\x61\x68\x85\xd2\x16\x12\xce\x40\xf2\x1c\x72\x95\xc6\x90\x8a\x14\x12\x96\x68\x60\x2c\x45\x4b\x25\x35\xc2\x30\x69\x0c\x98\x4c\x4b\x26\x94\x51\x2a\x91\x42\x73\x2e\x98\x66\x39\xd5\x99\x56\x12\x85\x40\x0c\x97\x9f\xf1\x9c\x6a\xa3\xa4\x44\x01\x96\x1a\xa3\x62\x09\x5c\x48\x61\x12\xca\xd3\x44\xab\x5d\x92\x97\x17\x1f\xbf\x03\x00\x00\xff\xff\xec\x22\xeb\xb2\x77\x03\x00\x00")

func ConfigCliAnonMetricNodeClientJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliAnonMetricNodeClientJson,
		"../config/cli/anon-metric-node-client.json",
	)
}

func ConfigCliAnonMetricNodeClientJson() (*asset, error) {
	bytes, err := ConfigCliAnonMetricNodeClientJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/anon-metric-node-client.json", size: 887, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliAnonMetricNodeServerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x4d\x6f\xda\x30\x18\xc7\xef\x48\x7c\x87\xc8\xe7\xb4\x38\x01\x07\x9a\x1b\x6d\xba\x15\x0d\x2a\x04\x54\x3b\x4c\x3b\xd8\xf1\x93\x60\x91\xe4\x89\x6c\x27\x74\x9d\xfa\xdd\x27\x87\xd7\xb5\x55\x6e\x7f\xff\xf4\x7f\xc9\xf3\xb7\xdf\xf3\x3c\xf2\x0c\x76\x8f\x7a\x37\x4b\x48\xec\x05\x7e\x27\x25\xdc\xf2\x44\x69\x12\x7b\x64\x60\xcb\x7a\x60\x2c\xb7\x8d\xb9\xc9\xf1\x46\x72\xcb\xc9\x01\x7a\x46\x09\x3f\xe0\x8f\x83\x04\x4b\x23\x26\xd2\x4c\x0a\x1a\x86\x51\x40\x59\x28\xc6\x41\x2a\x58\x16\x49\x48\xe9\x1d\x93\x14\x02\x2a\xb3\x68\x74\x27\x46\x3c\x14\x63\x39\x99\x04\xc0\x18\x0c\x69\x94\x0a\x10\xe9\xd1\x71\x05\x95\x84\xb7\x16\x1b\x43\x62\xcf\xea\x06\x4e\x41\x89\x32\x29\xb6\xa0\x5d\x58\xc6\x0b\x73\x7c\x98\x2b\x63\xa1\x9a\x4a\xd9\x35\xa5\xb7\xdd\x17\x0f\xe9\x90\x0e\xcf\x8e\xb9\x63\xf4\x06\x6b\x95\x3a\xd7\x5f\x64\xbf\x55\xa6\x06\x5d\x72\x55\x90\xdf\x7e\xbf\xd7\x71\x4f\x9b\xcd\xf2\xb1\xe2\xa2\x00\xf9\x5f\xb4\xd3\x9f\xd0\x58\xe7\x1f\x84\xe3\x2e\x21\x20\x97\xb7\x25\x6a\xf7\x36\x61\x23\x76\x10\xa7\xcb\xd9\x02\x65\x53\x80\x0b\x23\x60\xb7\x7e\x05\xd6\xdf\x83\x18\xfa\x5c\x96\xaa\xf2\x79\x5d\x97\x60\xb5\x6b\x73\x0a\xff\xc9\x77\xcd\x03\x56\x99\xca\x49\xec\x75\x37\xf1\x3c\xf2\x45\x9b\x0f\x87\x69\xb9\xbe\x3a\x8e\x1c\xec\xf9\xae\x21\x8e\x7b\x3f\x19\xcf\x31\xff\xa6\x0a\x38\xd3\x05\xe6\x97\x53\xde\x16\x98\x1f\x97\xcc\x31\x9f\x43\x0b\x85\x03\x93\xc7\xfb\x97\xef\x17\x7d\xc1\x5f\xd7\xea\xcd\x59\x84\x94\x5e\xab\xf7\x3c\xdd\x35\xb5\x5b\xc9\xce\xf2\x03\x96\xb5\x06\x63\x56\x68\xb9\xbd\xee\xde\x01\xeb\xed\x16\x5e\xed\xa7\xa1\xd3\x0a\xab\xc5\xe1\x8f\xac\x41\xb7\xa0\xbf\x5e\xfe\x09\x5b\xa2\xb1\xb9\x06\xf3\xb2\x9a\xb9\xde\x87\xe5\xfd\xde\xfb\xbf\x00\x00\x00\xff\xff\xca\x3d\x00\xa9\xd5\x02\x00\x00")

func ConfigCliAnonMetricNodeServerJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliAnonMetricNodeServerJson,
		"../config/cli/anon-metric-node-server.json",
	)
}

func ConfigCliAnonMetricNodeServerJson() (*asset, error) {
	bytes, err := ConfigCliAnonMetricNodeServerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/anon-metric-node-server.json", size: 725, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthProdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x97\x4d\x8b\x1e\xd7\x72\xc7\xf7\x06\x7f\x87\x61\xd6\xe1\x71\xbd\x9e\x73\x4a\x2b\x11\x27\xd9\xc5\x84\x38\xbb\x90\x45\xbd\xc6\x02\xa1\x09\xd2\xc8\x90\x04\x7f\xf7\x4b\x4b\x57\x5c\xcd\xc5\xcf\x7a\x56\x0d\xdd\xcd\xcc\xef\xa9\xfa\xd7\xef\x74\xfd\xff\x8f\x3f\x3c\x3c\x3c\xfe\x7b\x7f\xa8\xfe\xbf\xdf\x9f\x3e\x7f\x7a\x7c\xf3\x30\xfe\xfe\x53\xff\xc3\x97\xfb\xbf\x3c\xfd\xd3\xbb\x4f\xf9\xf4\x7b\x7f\xfc\xdf\x97\x0f\x7e\x7e\xff\xf9\xd3\x73\x7f\xfc\xf9\xe9\xc3\xbc\xfb\xef\xc7\x37\x0f\x5f\xfe\xcc\xc3\xc3\xe3\x3f\x7f\xf0\x78\xdf\xf5\xf8\xe6\xe1\xf9\xe3\xe7\xaf\xef\x3e\x3c\x3c\xfe\xcb\xfb\xee\xe7\xc7\x37\x0f\x8f\xfd\xfc\xdb\xed\x7f\x3e\x3e\xd5\xe3\xb7\x27\xff\xf8\xf4\xf4\xfc\xcb\x53\xf5\xf5\x7f\xff\xf3\xeb\xbd\x87\x87\xc7\xfe\xf0\x54\xfd\xe6\xa7\x9f\x56\x2f\x55\x99\x60\x60\x09\x42\x64\x3b\x93\x05\x03\x70\x28\x23\x56\x14\xf2\x42\x6b\xf4\xdd\x7b\x85\xaf\xd5\x78\xc0\xdc\x1d\x52\x07\x3d\x95\xd3\xbc\xb7\xe5\xd0\x94\xf8\x0e\xcf\x40\x28\x24\x40\x38\x66\xc1\x1b\x72\xeb\x74\xa1\x85\x19\x96\x25\x64\x15\xd0\x31\xf4\xf0\x7a\x2b\xfb\xb6\xf5\x66\x76\xc3\x65\x6f\x44\xf8\x1b\xf7\x77\x8c\xc2\x2b\x73\xcd\xda\x62\x74\xa6\xd2\xdc\x66\x9b\xc1\x90\x89\x00\x50\xac\xa3\x85\xc9\x7b\x80\x34\x31\x5a\x48\xf1\x68\x68\xe0\x80\x01\x4c\xfb\x60\x66\x92\x2f\x64\xa0\x75\xc6\x0c\xae\xd7\x7c\x17\x29\x0d\x6f\x06\xca\xc3\xac\x4e\x89\xbe\x68\xf3\x6a\x23\xa6\x65\x98\xc9\xfe\x16\xf7\xb9\x21\x9d\x1b\xf2\x97\xeb\x1d\x4c\xa6\x99\x55\xe7\xec\x05\x01\x26\xdb\xb9\xba\x55\xb2\x67\xa4\x4e\xed\x81\x90\x04\xe2\x5c\xe5\xc5\xa2\xeb\x2c\xd4\x49\xef\x63\x4d\x2b\x93\xb6\xf2\xd0\x19\x24\x39\xea\x82\xb8\xd2\xf6\x8e\x36\xde\xbe\x69\x2d\x45\x5c\x6a\x8b\x96\xba\xc3\xe6\x15\xca\x25\x2b\x68\x8b\x2c\xb2\xe5\x6f\x59\x6e\x1b\xae\x6a\x12\xdc\x63\x24\x2e\xd8\x02\x81\x68\x68\xac\x67\x91\xd6\xb6\x92\xf4\xdc\xa5\xe0\x2c\xb5\xad\x2d\x97\x35\xae\xc3\x98\x9a\x1b\x74\xf3\xd6\xed\x38\x5a\xbb\xce\x11\x45\x88\x54\xd3\xda\xdd\x52\xce\x89\x0a\xc7\x6b\xce\x8e\x48\x6b\xa3\x05\x75\x40\x7a\x80\xe7\x24\x36\xef\xa1\x09\x9a\x5c\x76\xb5\x5b\xe9\x86\xb0\x6e\x08\xfb\x0e\xa4\xb2\xa9\x7b\xec\xc3\x3c\xd8\x19\x6b\x63\xa8\xc5\x80\x12\xe6\x10\x10\xc9\xf4\xc1\x45\x93\x5c\xb4\xb6\x56\xcb\x45\xa2\x8b\x97\x6f\xed\x64\x2a\xe4\xab\xcf\x89\x47\x6a\x4e\x61\xd5\xf8\x01\x36\x61\x83\x75\x0e\x95\x2f\x72\xa9\x11\x2a\x99\xcc\x59\x85\xfb\xc0\x41\x5d\x7e\xf6\xdf\xfa\x2d\x70\xc3\x73\xaf\x96\x2a\xa0\xa9\x60\x35\xeb\x70\xda\xa2\xde\x69\xb2\x21\x48\x31\x62\x6d\xab\x5a\xb6\xcf\x1c\x2a\x0d\x59\x36\x38\x2b\x97\x14\x62\x29\x4c\x94\x56\xd9\xec\x03\x98\xcb\x4b\x71\x38\x08\x5c\x67\xe5\x9e\x69\x92\x93\x69\x1e\x44\x3c\x27\x32\xfc\xca\xb0\x44\x60\x42\x0f\x99\x4e\xc1\x5b\xd6\x1b\x11\xdf\x08\xf5\x86\xba\xbe\x50\x7e\x85\xfc\xaf\x6f\xb3\xff\x1f\x1f\x2f\x87\xd4\xbf\xfa\xbb\xf7\xbf\xf6\xc7\xdf\xfb\xe3\x1d\x09\xc0\xf2\x06\xf1\x8d\xad\x15\x67\x1d\xdf\x44\xb9\xb7\x13\xe6\x21\x11\x6f\x3e\x83\x51\xeb\xaa\xfa\xd9\x99\x2b\xa7\xcf\x71\x86\xc5\xe3\x98\x24\xba\x8c\x88\x69\x96\x8c\x68\x94\x0a\x9c\xe9\x52\x64\x6e\x8f\xd3\xb5\x0f\x88\x31\x53\x80\x8c\x25\x22\xb4\xe7\x9e\x8d\x89\x21\x64\x7f\x95\x00\xc9\xbe\x11\xca\x9d\x72\xa7\xd0\xf0\x3a\x4e\x3c\x6e\xe7\x9a\xac\x35\x45\xb2\x89\x60\xab\xc1\x22\x26\x26\xb1\x9e\xa5\xbb\x68\x15\xeb\xf6\xbd\xb7\x08\x7b\x27\x48\x05\x06\x99\xb3\x13\xf5\x70\xef\x54\x39\x8d\x47\x8c\xab\x7c\x14\x9d\x31\xc0\xbb\x16\x6c\xbb\x7e\x69\xb4\x7a\x1f\x3e\x93\xe3\xc3\x2e\xf6\x5d\x2a\xe8\xa6\xf7\x28\xbb\x29\x94\x03\x3c\xdb\x96\x11\xae\xed\x82\xa0\x28\x91\xce\x40\xb2\x4c\x2b\x06\x1a\x7d\x9d\xc6\x9a\xb1\x8d\xeb\x4a\x23\xf4\x04\x9a\x0e\x88\x4b\x58\x9f\xcd\x13\x16\x5b\x3c\x8f\x54\x1f\x40\x84\x95\xb2\x34\x4e\x53\xac\x94\x81\x32\x8e\xb3\xc5\x0a\x75\x9f\x98\xf4\x01\xee\xb7\x08\x72\x43\xdb\x37\xba\x5c\x25\xf7\x30\x29\x4f\x35\x67\x04\x5d\x9a\x62\xc8\x08\x0d\x6e\x00\x8e\xdc\x44\x81\xb4\x46\xbd\xe7\x50\x13\x28\xb9\x5f\xc3\x4c\xe9\x26\x0d\xb9\xbd\x08\xad\x95\x39\xfc\x9c\x4b\x10\x47\x3b\xea\x00\x55\x13\xac\x65\x4c\xaa\xcc\x1a\x08\xc0\xb0\x97\xa8\x87\xe2\x86\x3e\x67\x11\x14\xf9\xc1\xab\xe3\x24\x72\x23\xc2\xdb\xdd\x8e\x6f\xf7\x25\xe7\x4a\x9d\xaa\x29\x04\x35\x17\xc7\x10\x41\x8a\xad\x86\xf4\x16\xaf\xa9\xba\x1a\x8a\xbd\x60\x51\xaf\xc0\xbd\xbd\xd3\x38\x72\x65\xe5\x20\x5d\x07\x99\x40\xe1\xd2\x8b\xac\x63\xaa\x74\xe9\x26\x2b\x17\x01\x5e\xa7\x76\x4a\xf9\xae\x28\x29\x00\x09\xf4\x04\x8a\x39\x2f\x3a\x4e\xeb\x9e\xf6\x81\x10\x33\xea\x60\x92\x0e\xec\x00\x76\x40\x5b\xa5\xab\x57\xb6\x2c\xb8\xc6\x96\x2b\xf6\xe6\x99\x6b\x7e\x9d\x48\x59\x65\x8f\x4f\xad\x84\xd5\xde\xcb\x8b\x95\xb9\x29\x9c\xad\xd4\x74\x49\x4e\x54\x84\x36\x65\xef\x44\xde\xae\x1d\x71\xb4\xcd\x2a\x27\xb7\x6f\x1d\xb3\x51\x7d\x7b\x29\x80\xd7\x4d\xcf\xcd\xe8\x5e\x2a\x8f\x0e\x96\x10\xd8\xd0\x98\x95\x1f\x40\x1f\x3c\x15\x67\xe3\x6a\x3d\xe2\x74\xbc\x20\x2a\x65\x4f\x54\xd6\x19\x5a\x3e\x5b\x2a\xca\xf6\x24\x6d\x43\x91\x75\x40\x95\x3b\x77\x96\x81\x91\x4f\xaf\xc3\x55\xed\xd8\x30\x36\xa9\x1b\x3b\x32\x24\xb0\x8e\xee\xbc\x0a\x71\xce\x51\xae\x6f\xed\x46\xb2\xdb\xb9\x07\x79\x7c\x49\x70\xb2\x98\x53\x43\x8f\x38\x53\xbb\xd8\x02\xeb\x6b\x20\x99\x97\x44\x23\x22\x90\x72\x12\x78\x25\x6e\xe7\xec\x88\x64\xf3\x2f\x91\x2c\x6e\xe4\x40\xbd\xca\xdc\xad\x75\x2e\x30\x3f\xe1\x94\x05\xb4\x00\xa5\xd7\x0e\x41\x17\x8f\x5d\x78\x39\x78\xed\x74\xda\x42\xfb\x45\xbb\xed\x5e\x28\x45\x70\x41\x13\xf5\x09\xa1\x28\x26\x87\x95\xa8\x4c\xb8\x74\xdc\x1a\x6c\x75\x47\x57\xed\xf1\x55\xab\x75\x4e\x44\x0f\x88\x40\xa4\xb8\xa8\xe1\x34\x2f\xc5\xe8\x75\xd0\xd8\x77\x27\x90\x01\x61\x56\x88\x5d\x66\xc5\xda\x63\x83\x75\x9d\xc2\x61\x46\xb4\x7a\x0d\x9b\x6f\xd7\x92\xaf\xd6\xd7\x2f\x93\x43\xa2\x7f\x66\xfd\x7f\xfb\xfc\xe9\xb7\x5f\x9e\x9e\xdf\xcd\xbb\xf4\xe7\x77\x4f\x1f\x3e\xfd\x99\xfb\x41\x5e\xdb\xfa\xdf\x15\x17\xe4\xb5\xed\xfe\x02\xe6\xb5\x25\xfe\x02\xe6\xb5\x55\xfd\x02\xe6\xb5\x95\xfc\x02\xe6\xb5\xcd\xfb\x32\x33\xaf\xac\xd8\x17\x30\xaf\xad\xd2\x17\x30\xaf\x6d\xcc\xbf\xd7\xe3\xaf\xcf\xfe\xfc\x2e\xef\xaf\xc4\x09\xdb\x1d\xaa\xdb\x39\x36\xe8\x4a\x2d\x51\x3f\x1a\xe9\x42\x03\x75\x8a\x03\xe5\xb2\x44\x98\xee\xbd\x10\x86\xcf\x6a\x70\xd9\x22\x0e\xbd\x83\x8e\xa8\x37\xd3\xe9\x49\x71\x97\xa0\x03\x5b\x7d\x0e\x9f\x6b\x91\xd1\x60\x3b\x1a\x73\x8d\x49\x27\x80\x41\x70\xec\xb5\xcc\x23\x71\xf8\xab\xe1\xd7\xcd\xe8\x86\xaa\xf7\xbe\x3a\x8e\xea\xbe\xf2\x10\x28\x0d\x52\x1a\x20\x3e\xbb\xbb\x0f\x6b\xc9\x65\xc8\x12\xc8\x1c\xc4\x2b\x8d\x51\xa6\x2c\x20\xa0\xc3\x3b\x87\x23\x62\x0e\x43\x70\xc7\x99\x0d\x46\x12\x0d\x49\x06\xb6\x0d\x90\x60\x1d\x4a\x4b\xee\x6d\xb8\x64\x35\x95\x0a\x72\x5f\xcb\x8a\x8a\x5e\x03\xf3\xfd\x07\x1c\xc9\xdd\xcd\xbd\xc1\x4f\x5d\x0a\x64\x01\x4e\xe3\x2b\x5c\xb0\x77\x1b\xe2\x51\xdc\x0a\x93\xa6\x5a\x81\x93\xd8\x60\x73\xae\x38\xe9\xda\xa4\x26\xeb\x1c\xa9\xd2\xbe\x36\x26\xd2\xd3\x9e\xb6\x70\x0c\xf6\x71\x36\x4e\xb9\x1a\x12\xfb\x54\x41\x5f\x2a\x94\xe6\x9d\xbd\x37\x07\xcb\xc6\xa2\x26\xcb\xb7\xc8\x72\x23\xb0\x1b\xf2\xb5\x70\xe2\xf7\xa7\xe5\x75\xf9\xe3\xc7\x1f\xfe\xf8\xf1\x87\xbf\x04\x00\x00\xff\xff\xd4\xf1\xc2\x57\xa1\x11\x00\x00")

func ConfigCliFleetEthProdJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthProdJson,
		"../config/cli/fleet-eth.prod.json",
	)
}

func ConfigCliFleetEthProdJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthProdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.prod.json", size: 4513, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthStagingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x95\xcf\x8a\x5d\xc9\x0d\x87\xf7\x06\xbf\xc3\xe5\xae\xc3\x19\xa9\x4a\x25\xa9\x7a\xd5\x64\x92\xec\x62\x42\x26\xbb\x90\x85\xfe\x7a\x1a\x9a\xbe\xd0\x7d\x6d\x48\xc2\xbc\x7b\xb8\xd3\x31\x78\x06\xf7\xda\xab\x73\xa8\x3a\x54\x7d\x48\xdf\x4f\xe7\xbf\xef\xdf\x9d\x4e\xe7\xbf\xd7\x53\xd6\x7f\x3e\x5f\x3e\xbd\x9c\xef\x4e\x6d\x8f\x2f\xf5\x87\x5f\xd7\x3f\x5c\xfe\xf4\xf0\x12\x97\xcf\xf5\xfc\xef\xdf\x6e\xfc\xf8\xf8\xe9\xe5\x5a\xcf\x3f\x5e\x9e\xfa\xe1\xe3\xf9\xee\xf4\xeb\x31\xa7\xd3\xf9\xcf\x4f\xe6\x8f\x95\xe7\xbb\xd3\xf5\xf9\xd3\xeb\xb7\xa7\xd3\xf9\x2f\x8f\x55\xd7\xf3\xdd\xe9\x5c\xd7\x9f\x8f\x97\xab\x7d\x7c\x78\xfa\x78\xfe\xb2\xf9\xc7\xcb\xe5\xfa\xe1\x92\x75\xbb\xfa\x9f\xaf\x6b\xa7\xd3\xb9\x9e\x2e\x59\x77\x3f\xfc\xc0\x13\x1c\x26\x8d\x30\xaa\xbd\xd6\xe8\x05\x82\xe4\x1c\x5a\x43\x93\xf7\x5a\x1e\xd0\x89\x54\xb2\x17\xf4\x9e\x1e\xd3\x87\x6b\x84\x06\xf6\x74\x4e\x84\x99\xcd\xdc\x0b\x0d\x67\x8a\x4c\x5f\xe9\xd0\x38\x81\x19\xdb\x57\x88\x6b\xdb\xc0\x20\xd5\x0d\xc1\x14\xb2\x9d\xd0\x16\x1b\x6d\xb8\x27\x39\x36\x1e\x63\xec\x83\xe8\x8e\x68\x7e\xe1\xfe\x8a\xb1\x65\xb7\xcf\x8d\xbb\x65\x84\x2d\x06\x4b\xa0\x49\x19\x31\x55\xcc\xbb\x08\x0b\x98\x79\x00\x96\xa7\xa5\x69\x65\x01\xf1\xa0\x45\x37\xa6\x72\x58\x91\x86\xab\x87\x4a\x8e\x20\x4f\x5d\x69\x8a\x0d\xe5\x63\x25\x18\x29\xbb\x7b\x68\x36\x0d\xf1\x2d\x68\xb1\x70\xcd\xe9\x09\xd0\x75\x8f\x42\x07\x4e\x3d\x10\xe4\x18\x73\xbf\x81\x89\x60\xa2\x81\xb2\xc7\x36\x01\xdc\xd5\x64\x36\x06\xed\x94\x09\xa3\x85\xad\xd4\x80\x9b\xc0\x47\x86\xaa\x8b\x4f\x2c\xef\x26\xe3\x31\xdb\x9d\xc8\x6f\xaf\x62\xe1\x36\x36\x07\x46\xe5\x14\x59\xb9\xb1\xbd\x50\x89\x67\xe0\x82\x2d\xc6\x36\xb9\xd3\x47\x28\x50\xf7\xec\x58\x3e\xd7\xfd\x5c\xc7\x98\x7a\xec\x1b\xe4\x6b\x2d\x5f\x19\xff\xf5\x45\x85\x7f\x3c\xdf\xac\xca\xbf\xda\xc3\xe3\x4f\xf5\xfc\xb9\x9e\xbf\xed\x84\x0b\xe9\xda\x28\x1c\x5b\x16\xe6\x44\xb2\xaa\xee\x18\x5c\xb1\x5b\x99\x8d\x70\xc8\x1a\x25\x99\x15\x1b\x1d\x37\xa0\x1a\x6a\x49\x84\x69\xf2\x94\xe8\x1a\x51\x19\xbe\x65\xb4\x96\x33\xa5\x22\xb7\xe7\x72\x2a\xdd\x21\xa5\x21\x9d\x92\xad\x86\x73\xec\x36\x9a\xe9\x0a\x0e\xde\x75\x73\x62\x8d\x63\xc3\x81\x8b\xdf\x28\x36\xdf\x64\x70\x33\x69\x94\x31\x12\x11\x4d\x63\x07\x6b\xcc\x6d\x13\x69\x42\xed\x5c\x2c\xbc\x57\x33\x82\xf6\xc4\x08\xe7\x48\x6d\xb0\xec\xa6\xbd\xb1\xa4\x33\x4c\xdb\x44\xa0\x64\x79\xa8\xad\xdb\x39\x92\x83\x78\x43\x78\x28\x14\x80\xa2\xac\x26\x08\x5c\x92\xdc\x2c\xaa\x49\x7a\x3f\x80\x0f\xd4\x7d\x0c\x82\x03\xdf\xa2\x2c\xea\x40\x08\x6c\x5e\xa1\x56\xa9\xd3\x62\xb0\x07\x7a\xfb\x40\xa3\x15\x81\xa6\x6b\x81\x2d\x05\x91\xd0\x1c\x59\xc3\xa0\x20\x12\xb5\x08\x3a\x09\x5a\x8a\x5b\x12\x46\x06\x47\x02\x6f\x1d\x0e\x48\x51\xaa\xc9\x45\xac\x32\x56\xdf\xea\x8d\x53\x6b\x2f\xbd\x01\x02\xc0\x30\xe9\x57\x25\xf6\x81\x7b\x1e\x84\xdf\x52\xe2\x6f\x9f\x5e\x7e\xfe\x70\xb9\x3e\xf4\x43\xd8\xf5\xe1\xf2\xf4\xf2\x2d\x31\x80\xbe\xb7\x12\x5f\xd5\x16\xe8\x7b\xf7\xfe\x37\x30\xdf\xbb\xc5\xbf\x6f\xe8\x4f\x57\xbb\x3e\xc4\xdb\x03\x1f\x54\xa3\x97\xed\x19\x4b\xb8\xad\xd6\x68\x6e\x90\x85\xa2\xc4\xb7\x51\xdd\x5b\xdd\xa2\x65\xf4\xda\xa5\x5a\xed\xc8\xd9\x6e\xcb\x27\xb4\x82\x51\xba\x68\x6b\xcd\xf0\x99\x2a\x3d\x9a\xd7\x40\x21\xbe\xcd\x3b\x15\x56\xe2\x55\x3d\x74\x73\xb0\xf5\xa0\x4e\x11\xa3\xb1\x6a\x2f\xe7\xcc\xff\x87\x7b\x0c\x3e\x70\xca\x1b\xb9\xd9\x48\x01\xb7\xfb\x86\xb8\xf9\x84\xc0\xec\x9c\x98\x96\xc2\x6b\x18\x71\xa7\xed\x29\xb0\x68\x58\x15\x3a\xf0\xa0\xad\x8e\x93\x56\x15\x6c\x9c\x8c\xe4\xea\xbb\x66\x29\xf1\x18\xa5\x64\x32\x60\xc6\xd2\xa5\x56\x98\x5b\x71\x37\x4f\xab\x28\x9c\x55\xcc\x5a\xd4\xcc\xac\xc0\x73\xeb\xbe\x47\x96\x63\xdf\x72\x73\x20\xe9\x1b\x90\x39\x55\x94\x08\x79\x8d\x06\x84\x39\x58\x75\xf7\xd0\xc9\x50\xbc\x7b\x24\xec\x04\x5e\x74\xfb\x6b\x52\x5b\x1a\x14\x8a\x4f\xa1\xa8\x35\x71\x67\x31\x0d\xd9\xe6\x36\x83\xc8\x96\xb7\x82\xe4\xde\x2c\xc1\x29\xb0\x7c\x3a\x05\x3b\xcc\x36\x01\xe1\x39\x08\x6a\x54\xb1\x35\xa0\xad\xb9\xeb\x16\x6e\xdc\xe3\x80\x43\xf9\xeb\x68\xdf\x1e\xbf\xbc\x7f\xf7\xcb\xfb\x77\xff\x0b\x00\x00\xff\xff\x22\x9a\xfc\x3c\x7d\x08\x00\x00")

func ConfigCliFleetEthStagingJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthStagingJson,
		"../config/cli/fleet-eth.staging.json",
	)
}

func ConfigCliFleetEthStagingJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthStagingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.staging.json", size: 2173, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthTestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x4b\x6b\xe4\xd9\x0d\xc5\xf7\x0d\xfd\x1d\x8a\x5a\x87\x9a\x7b\x25\x5d\x3d\xbc\x6a\xe6\x91\x6c\x26\x4d\xc8\x24\xab\x90\xc5\xd5\x6b\xc6\x60\x5c\x60\x57\x37\x24\x61\xbe\x7b\x28\x1b\x83\xa7\x69\xaf\x7b\xf5\x07\x5d\xf1\xd7\x41\xe7\xa7\xf3\xbf\xf7\xef\x0e\x87\xe3\xcf\xe7\x5f\x7f\xae\xcf\x75\x77\xbc\x39\x1c\x7f\xfc\xe9\xfb\x7f\xfe\xe5\xf8\xa7\xa7\xfa\xdf\xeb\x3e\xeb\xbf\x9f\xcf\x9f\x1e\x8f\x37\x87\xde\x77\x8f\xf5\x5c\xff\x78\xfe\xf1\xf6\x31\xce\x9f\xeb\xe1\x3f\x7f\x7c\xf8\xe1\xee\xd3\xe3\xa5\x1e\x7e\x38\xdf\xf7\xed\xaf\xc7\x9b\xc3\xd3\xef\x0f\x87\xe3\x4f\xf7\xdb\xef\x2a\x8f\x37\x87\xcb\xc3\xa7\xe7\xde\xc3\xe1\xf8\xe7\xbb\xaa\xcb\x75\x66\x5d\x7e\x3b\x5d\xea\xf1\x72\x7c\x79\xf9\xfe\x7c\xbe\x7c\x3c\x67\x5d\xe7\xfe\xeb\xb9\x76\x38\x1c\xeb\xfe\x9c\x75\xf3\xdd\x77\xb9\x77\x41\x09\x28\x8c\x52\x2e\x23\xe8\x0d\x5b\xf7\x96\xe4\x32\x5b\x94\x34\x08\xb7\x2c\x24\xc5\x54\x4f\x44\xad\xc9\x5e\x0a\xd1\xc6\x80\x06\xb9\x62\xd4\xdc\xb5\x24\x30\xc5\x30\x30\x31\x33\x53\x3b\x97\x22\x1a\x30\x14\x01\x52\x86\x31\xb7\x2d\x8c\x14\xf4\x85\xab\x57\xef\x0f\x24\xa7\x05\xa7\xa9\x7a\x9a\x64\x37\x44\xf8\x22\xfc\x95\x48\xab\x61\xaa\x4b\x56\xb9\xc8\x94\x80\x95\xb5\x05\x3a\xe7\x0c\x71\x14\x61\xc9\x18\x16\x73\x0b\x2b\xb7\x04\x54\x2c\x91\xc4\xa1\x09\x74\x6d\x88\x72\x96\x95\x45\x38\x85\x84\xf6\xdc\x2a\xa3\x48\x54\x41\x10\x8c\xa5\xa9\xb7\xe8\xf2\x01\xbe\x6d\x25\xb3\x39\xce\x24\xa6\xac\x18\x1f\x60\xf0\x69\xaa\x9d\x80\xf0\x34\x99\xde\x90\x19\xb3\xd6\x98\xaa\x2a\xa1\x8c\xc9\x74\x1d\xe7\x6c\xde\x3c\x65\xf1\x1c\x2a\x0a\x8b\x70\x14\xd1\x98\x82\xd8\xcb\xb7\x48\xc8\x48\x9f\x04\xc8\xd9\xa8\xb3\xab\x7d\x94\xd7\xdc\x41\x00\x46\x6e\x05\x3c\xdd\x0b\x10\xd3\xd3\x15\x0b\x21\x96\x72\x30\xef\x02\x0e\xcd\x92\x11\x4e\xf1\x01\xd7\xf3\x22\x59\x4f\x13\xe5\x49\xe5\xb3\xc8\x7f\xbf\xc0\xf0\x8f\x87\x2b\x54\xf9\xd7\x7d\x7b\xf7\x4b\x3d\x7c\xae\x87\xaf\x53\xc1\xd3\xd2\x7d\x65\xee\x09\xa5\xcb\x7b\x94\xaf\x74\x1a\xed\x98\xc5\xb0\x78\xd8\x20\x04\x02\x41\x89\x51\x26\xab\x25\x3b\x79\x59\xea\xca\xe0\xb4\xad\xd4\x46\x3c\xb7\x80\xc6\xda\xce\x1a\x43\xa0\x2b\x51\x63\xf3\x5e\x68\x53\x62\x03\xb9\x96\x61\x04\x88\x67\x35\xee\x59\x62\x3b\x5e\x53\x61\xfc\xc6\xba\x8b\x94\x57\x17\x07\xec\xab\xf5\x8b\x71\x33\x91\x98\x8d\xd4\xb2\x28\x16\x60\xa2\x5d\x58\x43\xe1\x8a\x00\x6a\xc5\xec\xab\x23\xa3\xaa\x19\x61\xc4\x90\xbd\x92\x47\xa0\x33\x58\xaf\x24\x32\x6a\xc3\x64\x57\xde\x42\x6b\x0f\x6f\xa6\xed\x60\xcb\xbd\x79\x89\x8d\x29\x3b\x83\x2b\xf5\x0b\x2a\xe6\x1b\x32\x65\x48\x2d\xa1\x85\x3b\x12\x8b\x54\x83\xc8\x2d\x47\x4d\x31\x59\x28\xb3\xa0\xb5\xaf\x78\xc2\xaa\x5d\xcb\x77\x6c\x73\x0b\xad\xc1\xa1\x1c\x59\x12\x62\xb4\x39\xa0\x90\x61\xa0\xb7\xf5\xe2\xd8\xa5\x3e\x6a\x8d\x46\x47\x0c\x0a\x70\x36\xda\xe2\xbb\x6a\x4f\x59\x44\x4c\x51\x54\xf8\x44\x85\xc1\x09\xc0\x4e\x53\xe0\x6b\x54\xfc\xed\xd3\xe3\x6f\x1f\xcf\x97\xdb\xbe\x8d\x7d\xb9\x3d\xdf\x3f\x7e\x8d\x8d\x41\xdf\x9a\x8a\x57\xcb\x1d\xf4\xad\xdd\xff\x83\x98\x6f\xed\xf1\x97\x86\xfe\x72\xd9\x97\xdb\x78\x3b\xf5\x77\xa2\xb6\xd1\xc0\xb1\x95\x38\x42\xc6\x58\x2e\x7b\x36\x3a\xfb\x98\xde\x54\xbd\x2c\x91\x4a\x13\x93\x9b\x72\x42\x36\x60\x4e\xf2\xad\xbc\x58\x06\x6c\xc2\x95\x48\xd1\x94\x8d\x4e\x13\x62\xc4\x34\xc0\xec\xb5\x33\xa2\x94\x78\x22\xcc\x3d\x52\xbb\xdd\x08\x97\x03\xd7\x12\x08\x78\x49\x7d\x58\x57\x34\xdf\x8a\xd3\x99\xd3\x90\x71\xd5\x98\xcb\xa6\xb6\xeb\x72\xdf\x2d\x42\xd7\x74\x9d\xd0\xbc\x52\x46\xb0\x89\xac\xc1\x53\xa5\x7a\x10\xc1\x48\xa1\x8a\xc1\x61\xa5\x3d\x32\x7c\x49\xed\x41\xd0\xba\xb2\x55\x08\x31\xb7\x4f\xd9\x13\x78\x54\x6a\x66\x4d\xcf\xb6\xe4\x5c\x09\x59\xe4\xe2\xad\x65\x86\x5f\xdc\x37\xbe\x21\xb3\x97\xe1\x06\x11\x9c\x1e\xa3\xb5\x7c\xa8\x16\x24\x1a\x00\x04\xe4\xb2\x6c\x37\xef\xe1\x68\x6b\xa4\x6c\x05\xcd\x35\x4b\xb7\x5b\x0d\xed\x6e\x4f\xb3\xc9\x5b\xa1\xd3\x0c\x63\xee\xa1\x23\x96\x04\x78\xca\xa8\xe4\x40\x6e\x52\xdb\xc6\x96\xc5\x26\xbb\xdb\x70\xa8\xa6\x57\xcd\x6d\xcf\xf7\x4d\x27\x9c\xa7\x39\xf4\xf5\x79\x5f\x3f\xbf\xbf\x7f\xf7\xfb\xfb\x77\xff\x0f\x00\x00\xff\xff\x3a\xc1\xd4\xbe\x9b\x08\x00\x00")

func ConfigCliFleetEthTestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthTestJson,
		"../config/cli/fleet-eth.test.json",
	)
}

func ConfigCliFleetEthTestJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthTestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.test.json", size: 2203, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetPlqProdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\x41\x6b\xdc\x3e\x10\xc5\xef\x81\xfd\x0e\xc2\xe7\x3f\x8e\x46\x33\x92\x47\x3e\x85\x7f\xda\xde\xba\x94\xa6\xb7\xd2\x83\x3c\x33\x6a\x0d\x66\x9d\xda\xde\x85\xb6\xe4\xbb\x97\xcd\x92\x43\x43\xda\x6b\x4e\x82\xf7\xc4\xcc\xfb\x3d\xe6\xd7\xee\xca\xb9\xe6\xa3\x1d\xd4\x7e\x9e\xe6\xe3\xda\xf4\xae\x96\x69\xb5\xff\x1e\xf5\xfd\xfc\x66\x5c\x65\x3e\xd9\xf2\xe3\x4f\xe3\x76\x3a\xae\x9b\x2d\xb7\xf3\xa1\x8e\x5f\x9b\xde\x3d\x8e\x71\xae\x79\x7b\x28\xc3\x64\xda\xf4\x6e\x5b\x8e\x97\xbf\xce\x35\xef\x26\xb3\xad\xe9\x5d\x73\x3f\x7d\x6f\xef\x97\x59\x9b\x27\xe7\xff\x79\xde\xf6\xb3\xda\x79\xef\xe7\x8b\xe6\x5c\x63\x87\x59\xad\xbf\xbe\x4e\x9c\x98\x11\x4d\x84\xd0\xd7\x94\x85\x54\x85\x58\x86\x54\x72\x2d\x04\x9a\x82\x15\x13\xb2\x21\x42\x52\x41\xaf\xe6\x0b\x47\x89\x43\x4c\x12\x31\x11\x1a\x27\xcd\xc6\x21\x03\x99\x66\xc3\xa2\xb9\x92\x54\x48\xd1\xba\xa2\x50\x05\x28\xd5\x08\x39\xc6\xd8\xa5\x8e\x58\x30\x20\x15\x62\x0a\xcc\x51\x6e\x32\xb4\x80\xd4\x42\xea\x5a\xc0\xdc\xa3\x27\x0f\xcd\x25\xe6\x97\x27\x84\x4f\xcb\xb9\x0a\x7d\x5f\xc6\xe9\xce\x96\x93\x2d\x2f\xb3\x80\x20\x27\x03\xc3\x90\x95\x86\x50\x2b\x77\x18\xcc\x8a\x8f\x40\x29\xc4\x18\x31\x33\x92\x5a\x10\xab\x59\x68\x50\xe0\x81\x13\x26\xd0\x0c\x05\x7d\x89\x10\x07\x53\xc9\x35\x60\x25\x66\x11\xf3\x50\x43\xcd\xe6\x93\x4f\x25\x0e\x69\x80\xd0\x49\xad\x5d\x97\xd4\x54\x73\x87\x64\x69\x60\x26\x31\xe9\x98\xbb\x1b\x88\x6d\xc0\xd8\x52\x6c\x03\x9c\x51\xd0\xe3\x73\x94\x0f\xc7\xf5\xdb\x7e\xde\xc6\x3a\x4a\xd9\xc6\xf9\xb0\xbe\x04\xe4\xe9\xb5\x51\x9e\xc7\xbe\xdb\xca\x36\xca\xdf\xcf\xe8\xb5\xf3\xfe\xab\xfa\xf3\xf3\xb0\xbb\x7a\xd8\x5d\xfd\x0e\x00\x00\xff\xff\x33\x41\x6f\x61\x8a\x03\x00\x00")

func ConfigCliFleetPlqProdJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetPlqProdJson,
		"../config/cli/fleet-plq.prod.json",
	)
}

func ConfigCliFleetPlqProdJson() (*asset, error) {
	bytes, err := ConfigCliFleetPlqProdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-plq.prod.json", size: 906, mode: os.FileMode(438), modTime: time.Unix(1645384717, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetWakuv2ProdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x91\x51\x4f\xc2\x30\x14\x85\xdf\x49\xf8\x0f\x37\x7d\x36\xdb\x18\x8c\xc4\xbd\x01\x62\x08\x91\x45\x19\x8a\x68\x7c\xa8\xdd\x9d\x34\xcc\xb5\xb6\xb7\x33\x62\xf8\xef\x66\x20\x2a\xc1\xc4\x37\x9f\x9a\x7c\xe7\xe4\x9c\xdb\x9c\xf7\x66\x03\x80\x4d\xb1\xcc\x70\x5d\x29\x67\x59\x0c\x39\x2f\x2c\x9e\x6c\x79\xa2\xce\xa4\x15\xaa\x42\xf3\xc6\x62\x20\xe3\x3e\xf9\xa0\x70\x96\xd0\x0c\x54\x99\xcb\x27\x16\xc3\x36\x05\x80\x0d\x4b\xfe\x58\x60\xf6\xd3\x0b\xc0\xce\x0b\x44\x62\x31\xb0\x57\xbe\x72\x55\xe8\x69\xa3\x32\xb6\x17\xfb\x4a\x51\xa2\x32\xac\x9b\xef\x1f\xf6\x74\x66\xea\x82\x6c\xc2\x65\x91\xa2\xa9\xd0\x1c\xca\x97\xce\x2e\x13\x45\x32\x97\x82\x93\x54\xa5\xfd\xcd\x94\x12\x27\x29\x8e\xb3\xbf\x3f\x7b\xac\xcd\xf9\xca\x7d\xd1\x1d\x03\x60\xbe\xd4\x1d\xbf\x15\x79\x61\x3b\xf2\x3a\x91\x17\xb6\x4e\x7d\x12\xda\xef\x06\x41\x10\xf8\x3a\xd4\x7e\xab\x7b\x2d\x5d\x38\xea\x3d\xcf\x6e\x69\x69\x56\x57\x17\x79\x3f\xbd\x1b\xad\xa5\x14\x14\x8d\xfb\xe3\xa1\x9e\x55\x73\xb1\xe8\xf6\x16\xc9\x1c\x5f\xa2\xe9\x64\x91\xb4\x05\xb1\x5d\xfe\x41\x77\x4a\xca\xe0\x7f\x1f\x50\x3f\x9b\xdd\xb0\xf5\x0d\x37\xe1\x1f\xbb\x6e\xfd\xcd\xc6\xa6\xd9\xf8\x08\x00\x00\xff\xff\x17\xfe\x70\x44\x3e\x02\x00\x00")

func ConfigCliFleetWakuv2ProdJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetWakuv2ProdJson,
		"../config/cli/fleet-wakuv2.prod.json",
	)
}

func ConfigCliFleetWakuv2ProdJson() (*asset, error) {
	bytes, err := ConfigCliFleetWakuv2ProdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-wakuv2.prod.json", size: 574, mode: os.FileMode(438), modTime: time.Unix(1645384790, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetWakuv2TestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x5f\x6f\xda\x30\x14\xc5\xdf\x91\xf8\x0e\x96\x9f\x27\x27\x76\x0c\x49\x78\xa3\x0c\x8a\x28\x44\xfc\x4b\x52\x98\xf6\x90\x80\x01\x13\x88\x83\x63\xa7\x29\x53\xbf\xfb\x04\x8c\x6e\x88\xa1\x3e\x59\x3a\xf7\xc8\xbf\x73\x8f\xee\xaf\x6a\x05\x00\x38\x66\xe9\x92\x1d\x0b\xa1\x73\xd8\x00\xab\x68\x97\xb3\x6f\x67\xdd\x13\xdf\x79\xbe\x10\x05\x93\xef\xb0\x01\x94\xd4\x7f\xf4\xd6\x4e\xe7\x8a\xc9\x96\x48\x57\x7c\x0d\x1b\xe0\xfc\x0b\x00\xb0\x9d\x46\xf1\x8e\x2d\xff\xf5\x02\x00\x3b\x3b\xc6\x14\x6c\x00\xf8\x16\x25\xba\x20\x48\xb1\x5c\xc1\xeb\xf0\x49\x08\xe5\x89\x25\x3b\x91\x7f\xfc\xbc\xaa\x53\x79\x02\x2c\x07\x11\xdf\x4d\x98\x2c\x98\xbc\x1d\x0f\x75\xbe\xf1\x84\xe2\x2b\xbe\x88\x14\x17\x69\xfe\x3f\xd3\x44\x45\x8a\x2f\xee\xff\xfe\xbb\xec\xfd\x2c\x8c\x12\xfd\xa9\x5e\x34\x00\xa0\xc1\x33\x6a\x50\x1b\x11\x4a\x10\xc1\x26\xb2\x2d\x43\x2d\x32\xc3\x32\x2d\xd3\x32\x32\x92\x19\xb8\xee\x73\x4d\xba\xcd\xa4\x08\xf9\x7b\x27\x5f\x8f\x37\xba\xd7\x8e\xdd\xde\x6a\x3b\x2b\xdb\x89\xe8\xf6\xd7\xa9\x3f\xda\x4b\xec\xd5\xf6\x2f\x61\x3a\xdb\x96\xb3\x71\xb0\xbf\x56\x70\x05\x60\x8b\x22\x62\xba\x08\x5b\xee\x89\xf2\x00\xb1\x1f\xf6\x99\x3d\x38\xee\x9d\x69\x3e\xf3\x75\xbc\x6e\x35\x43\x1c\xf5\x04\xeb\x4c\x16\xa5\xec\x6f\x9d\x2c\xeb\x76\x78\x31\x14\xae\x1d\xfb\xf3\x3b\x84\x49\x11\xae\x51\x44\x2c\x17\x61\xe2\x3c\x42\xf4\x62\xc2\x88\x73\xe8\xbf\x96\xd3\x5a\x32\x2f\x03\xdf\x17\x3d\x65\x93\xf6\xe0\xe8\x3d\xbf\x3e\x51\x7b\x5c\x96\xb5\xcd\x9b\x75\xa0\xb3\xed\x04\x5e\x08\x37\x0d\x4e\x94\x90\xec\x41\x8d\x9f\x5b\x62\x0b\x39\xf5\x73\x02\xd7\x34\xcd\xdb\x00\x41\xc0\xeb\x23\xba\xb5\x07\xcd\x97\x80\xc7\x07\x1d\x3a\x51\x93\xd8\xbe\x27\x9b\x74\xe4\x84\xc9\xd1\x6d\x33\xf5\x1c\x70\xed\xcc\x3b\xf8\x1a\xe0\xf4\x7c\x5c\xce\xf3\x94\x21\x20\x5f\x5c\xe7\xd9\x5f\xad\x7c\x54\x2b\xbf\x03\x00\x00\xff\xff\xea\x95\x89\xc9\x04\x03\x00\x00")

func ConfigCliFleetWakuv2TestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetWakuv2TestJson,
		"../config/cli/fleet-wakuv2.test.json",
	)
}

func ConfigCliFleetWakuv2TestJson() (*asset, error) {
	bytes, err := ConfigCliFleetWakuv2TestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-wakuv2.test.json", size: 772, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliLesEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\xe5\x52\x50\x50\x50\x50\xf2\xc9\x4c\xcf\x28\x71\x2d\xc9\x70\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x4a\x80\x25\x5d\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\x21\x12\xb5\xbc\x5c\xb5\xbc\x5c\x80\x00\x00\x00\xff\xff\x9a\x3a\x73\x43\x3f\x00\x00\x00")

func ConfigCliLesEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliLesEnabledJson,
		"../config/cli/les-enabled.json",
	)
}

func ConfigCliLesEnabledJson() (*asset, error) {
	bytes, err := ConfigCliLesEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/les-enabled.json", size: 63, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliMailserverEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\xe5\x52\x50\x50\x50\x50\x0a\xcf\xc8\x2c\x2e\x48\x2d\x72\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x8a\x83\xe5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\x75\x30\x64\xfc\x42\x02\x82\x2b\xf3\x92\x71\xca\xfb\x26\x66\xe6\x04\xa7\x16\x95\xa5\x16\x61\x51\x82\x90\x0c\x48\x2c\x2e\x2e\xcf\x2f\x02\xd9\xa3\x54\x5c\x92\x58\x52\x5a\xac\x9b\x9f\x96\x96\x93\x99\x97\xaa\x9b\x99\x97\x94\x5f\xa1\x04\xd1\x55\xcb\xcb\x55\xcb\xcb\x05\x08\x00\x00\xff\xff\xd2\x2c\xf8\x1e\xb8\x00\x00\x00")

func ConfigCliMailserverEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliMailserverEnabledJson,
		"../config/cli/mailserver-enabled.json",
	)
}

func ConfigCliMailserverEnabledJson() (*asset, error) {
	bytes, err := ConfigCliMailserverEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/mailserver-enabled.json", size: 184, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigStatusChainGenesisJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x41\x6f\xdb\x30\x0c\x85\xef\x05\xfa\x1f\x04\x9d\x77\xa0\x24\x8a\xb4\x72\x5b\x97\x19\x1b\xb0\xdb\x7e\x01\x25\x51\x8d\x51\x27\x0e\x12\x07\x68\x37\xf4\xbf\x0f\x6e\x92\x2d\xc3\x76\xaa\x2f\x86\xf4\xc8\xf7\x3d\x3c\xfd\xbc\xbf\x33\xc6\xca\x38\x4e\xc5\xae\xcc\xdb\xc9\x18\x63\x73\xef\x08\x8b\x04\x74\xc1\x93\x40\xc8\x11\xb9\x40\x7c\x08\x18\xb2\xff\xec\x9d\xf6\x1f\xd5\x63\x4e\x37\x3b\xc6\x66\x19\x65\x57\xd4\xae\x8c\x85\x67\x07\x3d\x7c\xea\x81\x70\xbd\x8e\xc9\xc3\xf2\xd9\xf3\xe4\xeb\x87\x2b\xc5\x43\x94\x58\x41\xd9\xb7\x46\x11\x38\xb5\x22\x39\xa3\x50\xd0\x10\xaa\xef\x44\xa8\x6a\xf3\xe5\x5d\x94\xe5\x77\x46\xd9\x32\xed\xda\xf0\xf8\xc7\xc5\x96\x8d\x0c\xbb\xaf\xd5\xae\x0c\x33\x5f\xe2\xd8\xcd\xb4\xd5\xe3\xac\x52\x1f\xc6\xa9\x3c\xd9\x95\x81\xab\x52\x65\xea\xa7\xc3\xd3\xf7\xd3\x7e\x3f\x1d\x66\xbb\x32\xf3\xe1\xa4\x57\x31\xbf\xfc\x90\xdd\x3c\x9c\xb6\xff\xac\xe9\xb0\x77\x11\xbe\xc8\x71\x73\x0e\x1b\x41\x49\x6b\x46\x4d\x50\x13\x39\x92\xd2\xe5\xc6\xce\x25\xd5\xc0\x05\x01\xbb\x82\x4e\x2a\xa4\xe0\x3b\x62\x52\x97\x43\xaa\x85\x3a\x01\x2d\x2d\x87\x6a\xff\x32\x8e\xff\xe7\x75\xbf\xaf\x6f\x0a\xa8\x43\x6b\x43\x39\x8d\xf3\xcb\xb5\xb6\xb7\xa6\xce\xa2\x3e\xcf\x07\x59\xcb\x2c\x97\x94\x81\x91\x1c\x23\x47\x0e\x18\xa8\x23\x47\x89\xd4\x43\x04\xf6\x94\x98\x16\x8d\xa2\x87\x88\x14\x79\x99\x4d\xa4\xc4\x1e\x50\x29\x32\x32\x53\x63\x4f\xf9\xe2\xfd\x28\xc7\x6f\xc3\x76\x98\x6f\xb1\xcb\x0b\xbd\xde\xdf\xfd\x0a\x00\x00\xff\xff\xd7\x89\x7f\x03\x7a\x02\x00\x00")

func ConfigStatusChainGenesisJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigStatusChainGenesisJson,
		"../config/status-chain-genesis.json",
	)
}

func ConfigStatusChainGenesisJson() (*asset, error) {
	bytes, err := ConfigStatusChainGenesisJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/status-chain-genesis.json", size: 634, mode: os.FileMode(438), modTime: time.Unix(1645382406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysBootnodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x4b\x11\xc4\x40\x08\x04\xd0\xfb\x56\xad\x17\x86\xe1\x2b\x87\xee\x04\xff\x12\xf2\x7c\xcb\x56\x07\x0e\x86\x36\x0e\xb7\x2e\x1c\x3d\x47\x04\x22\x34\xae\xa2\x3a\x65\xee\x49\x32\x37\x10\xb0\x87\xaf\x5b\xe8\x75\xfd\xff\xbe\x00\x00\x00\xff\xff\xe7\x6e\x59\xeb\x42\x00\x00\x00")

func keysBootnodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_keysBootnodeKey,
		"keys/bootnode.key",
	)
}

func keysBootnodeKey() (*asset, error) {
	bytes, err := keysBootnodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/bootnode.key", size: 66, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysFirebaseauthkey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x4b\x4e\x84\x30\x18\x00\xe0\xbd\x89\x47\x69\x32\x44\xe9\x14\x77\x7f\x85\xa6\xf6\x01\x82\x82\xd0\x25\xa8\x60\xa8\x94\x97\x05\x6f\x3f\x1f\x00\x00\xcf\x42\xfd\xf0\xf5\xf2\x04\xaf\x10\x05\x2d\xfb\xdb\x5d\xf1\x89\xa3\x74\x21\x08\x36\x23\xda\x43\x13\xcd\xfe\x39\xf6\x55\xb9\x8f\x42\xd9\x55\xd6\xf1\x25\xd1\x06\x07\x3e\x3f\x39\x5c\xd8\x50\x7a\x31\x64\xb0\xfe\x2e\x48\xd1\xf7\xa4\xb3\x94\x84\x1f\xbd\x4c\x9b\x18\x15\x6f\x8d\x34\xd7\xb9\x96\x13\xa9\xa4\x67\x0d\x5d\xdc\xee\xf0\xa4\x82\xb0\x4b\xed\xf7\x7c\x3e\x1e\xcf\x54\x8c\x3c\x29\xac\xbb\x5a\x65\xce\x08\xf5\xf8\x27\x8f\xc7\xed\xfe\xee\x16\x00\x00\xff\xff\x17\xe7\x6c\x12\x9a\x00\x00\x00")

func keysFirebaseauthkeyBytes() ([]byte, error) {
	return bindataRead(
		_keysFirebaseauthkey,
		"keys/firebaseauthkey",
	)
}

func keysFirebaseauthkey() (*asset, error) {
	bytes, err := keysFirebaseauthkeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/firebaseauthkey", size: 154, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount1StatusChainPk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xdd\x8a\xe4\x40\x08\x05\xe0\x77\xf1\x3a\x01\xb5\x4c\x55\x99\xb7\x51\xcb\x62\x9b\xf9\x6b\x92\x66\xd8\x65\xe8\x77\x5f\x32\xcb\x32\x97\x82\x7e\x1c\xcf\x17\x7c\xe6\x71\xde\x3e\xde\x61\x2f\x0b\xdc\x06\xec\xd0\x29\xb2\x25\xe9\xca\xd4\x71\x15\xe4\xbe\xba\x2a\xae\x68\x52\x94\x7c\x56\x33\x84\x05\x6c\x8c\x23\xcf\x13\x76\xf0\x49\x55\xc2\x8a\x50\xe1\x6a\x58\x7c\x93\x16\xb8\x79\x91\xe2\x9c\x4c\x39\x2d\x59\x5c\x61\x81\x38\xfe\xdc\x1f\x1f\xb0\x7f\x41\xdc\xee\xbf\xf2\x78\xe4\xef\x07\xec\xb0\x35\x17\xb1\x6e\xd4\x67\x6f\x8a\xea\xce\xd1\x4c\x95\x98\x5c\x54\x8b\xa9\xb7\x31\x2c\x89\x46\xe9\x53\x23\x31\x91\x42\x9a\x8c\x51\x6d\x9b\xf5\x92\xbf\xbd\xbb\x1d\xf6\x76\x5e\xfe\xed\x13\x76\x30\xc3\xad\x17\xec\x93\x38\x2a\x73\xca\xa8\x38\x34\xb0\x59\x6a\x2f\x2d\xe1\xf9\xff\xf0\x5a\xce\x73\x25\xee\x6b\x3c\x0e\x58\xe0\x65\x4c\xd8\xe1\xfc\x0e\xfc\x6f\xfc\xb1\xc7\xcb\x6b\x5e\x85\xf1\x02\xa7\xbd\x5e\x0f\xb8\x57\xc1\x62\x9e\x8d\xb3\xb6\x9a\xcc\x64\x82\xc6\x81\x6d\x93\xd9\xe8\x4a\xae\x54\x44\xab\x78\x20\x99\x85\x52\x99\x21\x65\x23\x1a\x19\x05\x16\x78\x87\xbd\x93\xf2\x02\x07\xec\x7d\x81\x3b\xec\xf4\x5c\xe0\xcd\x02\x76\x68\x9d\xb1\x0d\xa4\x40\x2f\x51\x49\xad\x4f\x51\x47\xd6\xda\xbd\x56\xaf\xc5\xc2\x37\x66\xec\x41\x45\xc8\xb4\x8c\xd0\x4a\x6d\xe0\x4c\x95\x9e\x09\xcf\xe7\xdf\x00\x00\x00\xff\xff\xd2\xdb\x1b\x65\xe9\x01\x00\x00")

func keysTestAccount1StatusChainPkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount1StatusChainPk,
		"keys/test-account1-status-chain.pk",
	)
}

func keysTestAccount1StatusChainPk() (*asset, error) {
	bytes, err := keysTestAccount1StatusChainPkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account1-status-chain.pk", size: 489, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount1Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4b\x8e\x24\x3b\x08\x45\xf7\xc2\x38\x42\xb2\x31\xd8\xd8\xf3\x57\xfb\xc0\x80\xf5\x52\xf5\x4b\x45\xa4\x4a\xdd\x2a\xd5\xde\x5b\x91\x83\xee\x19\x20\x74\xee\x3d\xdf\xa0\xee\x47\x9c\x27\x0c\x78\x29\xfc\x5f\x2a\xc8\xae\x2e\x2d\xb0\xd6\x6c\x14\x2f\x9d\xb3\xb3\x34\x6c\x51\x9d\xa5\x38\x1b\x6c\x60\xc7\xef\xfb\xe3\x13\xc6\x37\xd8\xed\xfe\x7f\x1c\x30\x40\xe3\xdc\x33\xca\x6e\x8f\xe3\x7a\x78\x9e\x1f\xf1\xeb\x01\x03\x48\x02\x7d\x89\xb7\xb4\x64\xae\x42\xea\x1a\x9c\x66\x9a\x29\x4a\x96\xa4\xa5\x63\xd0\x9c\xb9\x89\x66\xa5\x82\xe4\x66\x92\x08\x5b\x4c\x6a\x95\xd6\x5f\xde\x5d\x0f\x7d\x3f\xaf\xd8\xdb\xd7\xc5\x2d\xc4\xa6\xb4\xb0\xd8\xcc\x19\xbb\xf6\x9e\x5b\x0e\xe9\x5a\x3b\xb2\x24\xf8\xd9\xe0\xd5\x17\x0c\x38\x9f\x85\xe1\xb9\xfe\x83\xf8\xeb\x5b\x7c\xc0\x28\xb8\xc1\x07\x0c\xac\x98\x89\x36\xb8\xc3\xc8\x1b\x1c\x30\x64\x83\x53\xdf\x2e\x81\xdc\x99\xb1\xc9\x9c\x46\xab\x68\x22\xb1\xa4\xe2\xad\x79\x70\xca\x54\x8b\xa1\x08\xf6\x59\x9e\xb3\x06\xad\x1e\xc8\x68\x58\xda\xc2\xa9\xd6\xae\x22\xef\x6a\x30\xa0\xa3\x97\x60\xd2\xde\x22\xbc\x74\xcf\x8b\x6a\xc3\xb6\x12\x13\x55\x26\x4c\xcb\x78\x95\x6c\x6d\x51\xb4\x14\x42\x55\xa7\x75\x76\x5b\x2e\x53\xf0\x49\xba\x39\x0c\x98\x35\x11\x59\x95\xbd\x74\xa3\x9d\xaa\xfb\x2e\x39\xe3\x8e\x16\x8c\xd9\x19\x6d\x31\x6c\xf0\x15\xc7\x79\xfb\xbc\x24\x7f\xfe\x04\x00\x00\xff\xff\x0d\x85\xaf\xaf\xeb\x01\x00\x00")

func keysTestAccount1PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount1Pk,
		"keys/test-account1.pk",
	)
}

func keysTestAccount1Pk() (*asset, error) {
	bytes, err := keysTestAccount1PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account1.pk", size: 491, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount2StatusChainPk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xdb\x8a\x1c\x41\x08\x80\xe1\x77\xf1\xba\x1b\x2c\xb5\x8e\x6f\x63\xa9\x45\x86\x3d\x0d\xdd\xc3\x92\xb0\xcc\xbb\x87\xde\x10\xf6\xd2\x8b\xff\x43\xfd\x82\xcf\x38\xce\xdb\xc7\x3b\x0c\xde\xe0\xe6\x30\x60\x9a\x69\xa3\x4c\xfb\x4a\x9a\x76\x59\xa1\xbb\xd6\x25\x3b\x17\x12\x49\x94\x8c\xd0\x60\x03\x75\x3f\xe2\x3c\x61\x00\x61\xd6\xec\x18\x95\xd6\x2a\x19\x6b\x5f\xa6\x73\x8a\x16\x0e\x66\xa7\xa6\x5a\x3c\x16\x5d\x91\x1d\x7f\xee\x8f\x0f\x18\x5f\x60\xb7\xfb\xaf\x38\x1e\xf1\xfb\x01\x03\xa4\xf6\x5c\x3d\x2c\xa8\xba\x4a\x11\x66\x77\xf4\x9c\x27\x77\x5f\x69\x61\xd7\xe0\x1e\x5c\x98\xe6\x42\xed\xc6\xce\x4b\x71\x52\x42\xd1\xa6\x34\x2f\xf9\xdb\xbb\xeb\xa1\x6f\xe7\xe5\xdf\x3e\x61\x80\x75\xae\x91\x7b\x23\x69\xa4\x8e\x3d\x73\x2f\x09\xb5\xf6\x98\xdd\x4a\x15\x78\xfe\x0f\x61\x80\xc6\xb9\x27\x6a\xbb\x3d\x0e\xd8\xe0\xc5\x17\x0c\x38\xbf\x17\xfe\x37\xfe\xd8\xfe\xf2\x1a\xd7\xc3\x68\x83\x53\x5f\xaf\x03\xd8\xb4\x18\xb7\x94\x5b\xc9\x92\x75\x22\x1b\x49\x14\x94\x42\x86\xc9\xc9\x5b\x53\xa9\xc2\x5c\xb4\x7a\x12\xd4\xa6\x4b\x94\x32\x16\x66\xce\x15\x61\x83\x77\x18\x2d\x75\xda\xe0\x80\xd1\x36\xb8\xc3\x48\xcf\x0d\xde\xd4\x60\x00\x56\x47\x67\x6a\xd6\xb1\x36\x2b\xd1\x66\x89\x55\x72\xe5\x54\xa8\xab\x72\x4c\x6a\xd1\x91\x49\x1a\x2f\xa1\x99\x45\xcd\x94\x85\x5c\x22\xb1\x34\x78\x3e\xff\x06\x00\x00\xff\xff\x4e\x39\x80\x7d\xe9\x01\x00\x00")

func keysTestAccount2StatusChainPkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount2StatusChainPk,
		"keys/test-account2-status-chain.pk",
	)
}

func keysTestAccount2StatusChainPk() (*asset, error) {
	bytes, err := keysTestAccount2StatusChainPkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account2-status-chain.pk", size: 489, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount2Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4d\x8a\x1c\x3d\x0c\x40\xef\xa2\x75\x15\xd8\xb2\x6c\x4b\xde\x7d\x7c\xe4\x20\xb2\x24\x93\x66\xfe\x9a\xaa\x66\x48\x18\xe6\xee\xa1\x7a\x91\x2c\x25\xc4\xd3\x7b\x5f\xa0\xee\x47\x9c\x27\x0c\xf8\x2f\x69\x16\xc4\x8c\x8d\x5d\x8a\x58\x51\xe9\x38\x57\xa5\x96\xfd\xff\x9c\x56\x17\x4e\x3f\x38\x13\x6c\x60\xc7\xef\xfb\xe3\x03\xc6\x17\xd8\xed\xfe\x33\x0e\x18\xa0\x71\xee\x19\x79\xb7\xc7\x71\x1d\x3c\xd7\x8f\xf8\xf5\x80\x01\xac\x2b\xc9\x5c\x9a\x50\x69\xf5\xa8\x2b\x17\x2d\xcc\x33\x8a\x64\xb7\x95\xc4\x6a\x36\xa6\x65\x2c\xc8\x84\x19\x31\x45\xea\xd6\x72\x4b\x84\x75\xf1\x5f\xde\x5d\x0f\x7d\x3b\xaf\xb7\xb7\x4f\x18\xd0\x75\x56\xd1\xa0\x2e\xb9\xf6\x1e\x1d\x3d\x9a\xd7\xe9\xac\x14\x48\xa1\xf0\xbd\xc1\x8b\x2f\x18\x70\x3e\x85\xe1\x39\xfe\x83\xf8\xcb\x6b\xbc\xc3\x28\xb8\xc1\x3b\x0c\x6c\x98\x89\x36\xb8\xc3\xc8\x1b\x1c\x30\x78\x83\x53\x5f\xaf\x00\xec\xd1\x6c\x72\xe4\x10\x4f\xd6\xdb\x9a\x73\x39\x91\x99\x22\xd5\xd2\x92\x2f\xa1\x24\xd3\x4c\xd4\x68\x51\x10\xdb\xa5\x35\xeb\x72\x9e\x49\xfa\x25\xf2\xa6\x76\x29\x2f\xf7\x59\x44\x3a\x7a\xcf\xb8\x26\x8a\x52\x59\x39\x72\xd4\x92\x4a\xe4\xc2\x1e\x26\x66\xa8\x2b\x66\xc2\xda\x82\xb5\xa7\x8a\xae\x54\xa4\x5b\xbb\x48\x37\x87\x01\x93\x51\xba\x4a\xde\x25\x05\xed\x24\x5e\x77\x6d\x4b\x76\xb6\x92\x2a\xf5\xc9\xd1\x14\x36\xf8\x8c\xe3\xbc\x7d\x5c\x91\xdf\x7f\x02\x00\x00\xff\xff\x80\x42\xa2\x5c\xeb\x01\x00\x00")

func keysTestAccount2PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount2Pk,
		"keys/test-account2.pk",
	)
}

func keysTestAccount2Pk() (*asset, error) {
	bytes, err := keysTestAccount2PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account2.pk", size: 491, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount3BeforeEip55Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\xdb\x8a\x1c\x31\x0c\x44\xff\x45\xcf\xdd\x20\x4b\xbe\xc8\xfe\x1b\x59\x96\xc8\xb0\xb7\xa1\x7b\x58\x12\x96\xf9\xf7\xd0\x59\xc2\x3e\xd6\x43\x1d\x4e\xd5\x17\x7c\xfa\x71\xde\x3e\xde\x61\xf0\x06\xb7\x05\x03\xd0\x96\xb9\x85\xed\x46\x61\x7b\x26\x4d\xbb\xf8\x2a\x7b\x26\x33\xec\xd4\x16\x2f\x81\x0d\x74\xad\xc3\xcf\x13\x06\xb0\x2e\xce\x5e\xbb\xac\x2c\x58\x35\x16\xca\xe4\xd2\x67\x27\x8c\x62\x75\x56\x9a\x55\xdc\x33\x6c\x60\xc7\x9f\xfb\xe3\x03\xc6\x17\xd8\xed\xfe\xcb\x8f\x87\xff\x7e\xc0\x00\xa2\xd2\xbb\x98\x77\x56\x2d\x93\x5a\x6a\xa5\x60\xc9\x9c\xd2\x52\x31\x6b\x53\xa8\x24\x6a\x2b\x23\x5a\xa7\x16\xca\xc2\x0d\x3d\x27\xa6\x4e\x66\x97\xce\x37\xef\xae\x87\xbe\x9d\x17\xff\xf6\x09\x03\xa4\x27\x6a\xd9\x49\x5b\xa3\xb6\x34\xd9\xd2\xb4\xc8\x6c\x12\xfb\x94\x89\xf0\xfc\x5f\x84\x01\xea\xe7\x9e\x48\x76\x7b\x1c\xb0\xc1\xcb\x0a\x18\x70\xfe\x13\xfe\x8e\x3f\xec\xf5\xf2\xea\xd7\x61\xb4\xc1\xa9\xaf\xd7\x80\x45\x93\x50\xb5\xd5\x2c\x11\xd8\xc9\x98\x51\x1a\x51\xc6\xf0\x5c\x83\xc2\xd8\x53\x66\xa6\xc9\x42\x9a\x05\x25\x6a\xc1\xc9\x56\xa5\x4b\x2d\x13\x36\x78\x87\x21\xa9\xd3\x06\x07\x0c\xd9\xe0\x0e\x23\x3d\x37\x78\x53\xbb\xd4\x10\x33\x63\x13\x89\xd5\x66\xa0\x93\xbb\xd7\x48\x5c\x4a\xcb\xa5\x27\x8e\xe2\x14\x25\x65\xaa\x1a\x9d\x58\x8a\x22\xba\x9b\xa6\x28\xd6\x98\x12\x3c\x9f\x7f\x03\x00\x00\xff\xff\x4c\x6d\xd5\xbe\xe9\x01\x00\x00")

func keysTestAccount3BeforeEip55PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount3BeforeEip55Pk,
		"keys/test-account3-before-eip55.pk",
	)
}

func keysTestAccount3BeforeEip55Pk() (*asset, error) {
	bytes, err := keysTestAccount3BeforeEip55PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account3-before-eip55.pk", size: 489, mode: os.FileMode(438), modTime: time.Unix(1645382407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../config/README.md":                        ConfigReadmeMd,
	"../config/cli/anon-metric-node-client.json": ConfigCliAnonMetricNodeClientJson,
	"../config/cli/anon-metric-node-server.json": ConfigCliAnonMetricNodeServerJson,
	"../config/cli/fleet-eth.prod.json":          ConfigCliFleetEthProdJson,
	"../config/cli/fleet-eth.staging.json":       ConfigCliFleetEthStagingJson,
	"../config/cli/fleet-eth.test.json":          ConfigCliFleetEthTestJson,
	"../config/cli/fleet-plq.prod.json":          ConfigCliFleetPlqProdJson,
	"../config/cli/fleet-wakuv2.prod.json":       ConfigCliFleetWakuv2ProdJson,
	"../config/cli/fleet-wakuv2.test.json":       ConfigCliFleetWakuv2TestJson,
	"../config/cli/les-enabled.json":             ConfigCliLesEnabledJson,
	"../config/cli/mailserver-enabled.json":      ConfigCliMailserverEnabledJson,
	"../config/status-chain-genesis.json":        ConfigStatusChainGenesisJson,
	"keys/bootnode.key":                          keysBootnodeKey,
	"keys/firebaseauthkey":                       keysFirebaseauthkey,
	"keys/test-account1-status-chain.pk":         keysTestAccount1StatusChainPk,
	"keys/test-account1.pk":                      keysTestAccount1Pk,
	"keys/test-account2-status-chain.pk":         keysTestAccount2StatusChainPk,
	"keys/test-account2.pk":                      keysTestAccount2Pk,
	"keys/test-account3-before-eip55.pk":         keysTestAccount3BeforeEip55Pk,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{ConfigReadmeMd, map[string]*bintree{}},
			"cli": &bintree{nil, map[string]*bintree{
				"anon-metric-node-client.json": &bintree{ConfigCliAnonMetricNodeClientJson, map[string]*bintree{}},
				"anon-metric-node-server.json": &bintree{ConfigCliAnonMetricNodeServerJson, map[string]*bintree{}},
				"fleet-eth.prod.json":          &bintree{ConfigCliFleetEthProdJson, map[string]*bintree{}},
				"fleet-eth.staging.json":       &bintree{ConfigCliFleetEthStagingJson, map[string]*bintree{}},
				"fleet-eth.test.json":          &bintree{ConfigCliFleetEthTestJson, map[string]*bintree{}},
				"fleet-plq.prod.json":          &bintree{ConfigCliFleetPlqProdJson, map[string]*bintree{}},
				"fleet-wakuv2.prod.json":       &bintree{ConfigCliFleetWakuv2ProdJson, map[string]*bintree{}},
				"fleet-wakuv2.test.json":       &bintree{ConfigCliFleetWakuv2TestJson, map[string]*bintree{}},
				"les-enabled.json":             &bintree{ConfigCliLesEnabledJson, map[string]*bintree{}},
				"mailserver-enabled.json":      &bintree{ConfigCliMailserverEnabledJson, map[string]*bintree{}},
			}},
			"status-chain-genesis.json": &bintree{ConfigStatusChainGenesisJson, map[string]*bintree{}},
		}},
	}},
	"keys": &bintree{nil, map[string]*bintree{
		"bootnode.key":                  &bintree{keysBootnodeKey, map[string]*bintree{}},
		"firebaseauthkey":               &bintree{keysFirebaseauthkey, map[string]*bintree{}},
		"test-account1-status-chain.pk": &bintree{keysTestAccount1StatusChainPk, map[string]*bintree{}},
		"test-account1.pk":              &bintree{keysTestAccount1Pk, map[string]*bintree{}},
		"test-account2-status-chain.pk": &bintree{keysTestAccount2StatusChainPk, map[string]*bintree{}},
		"test-account2.pk":              &bintree{keysTestAccount2Pk, map[string]*bintree{}},
		"test-account3-before-eip55.pk": &bintree{keysTestAccount3BeforeEip55Pk, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
